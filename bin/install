#!/usr/bin/env bash

set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
TMPDIR=${TMPDIR:-/tmp}
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_kube_release() {
  local kube_release_name="$1"
  local install_type="$2"
  local version="$3"
  local install_path="$4"
  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $kube_release_name $version)"

  mkdir -p "${bin_install_path}"

  local bin_path="${bin_install_path}/${kube_release_name}"
  echo "Downloading ${kube_release_name} from ${download_url}"
  curl -s "$download_url" -o "$bin_path"
  chmod +x "$bin_path"
}

get_arch() {
  uname | tr '[:upper:]' '[:lower:]'
}

get_download_url() {
  local kube_release_name="$1"
  local version="$2"
  local platform="$(get_arch)"
  echo "https://storage.googleapis.com/kubernetes-release/release/v${version}/bin/${platform}/amd64/${kube_release_name}"
}

for release_item in "kubeadm" "kubectl" "kubelet"
do
  install_kube_release "${release_item}" $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
done
